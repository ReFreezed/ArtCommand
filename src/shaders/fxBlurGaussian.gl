/***************************************************************
*
*  Effect: Gaussian blur
*
*---------------------------------------------------------------
*
*  Art Command
*  by Marcus 'ReFreezed' Thunstr√∂m
*
***************************************************************/

#include "_utils"

uniform int  radius;
uniform vec2 direction;

#define TAU 6.283185307179586

vec4 effect(vec4 loveColor, Image tex, vec2 texUv, vec2 screenPos) {
	// https://en.wikipedia.org/wiki/Gaussian_blur
	if (radius < 1)  return texelClamped(tex, texUv);

	float sigma          = radius / 3.; // Standard deviation.
	// sigma            *= .55; // This technically makes the radius more accurate, but makes us look more different from box blur.
	float invSqrtTauSig  = 1 / (sqrt(TAU) * sigma);
	float inv2SigSq      = 1 / (2 * sigma*sigma);
	vec2  step           = direction / love_ScreenSize.xy;

	vec4  sum    = vec4(0);
	float weight = 0;

	for (int pos = -radius; pos <= radius; pos++) {
		float coeff  = invSqrtTauSig * exp(-pos*pos * inv2SigSq);
		sum         += texelClamped(tex, texUv+pos*step) * coeff;
		weight      += coeff;
	}

	/* DEBUG * /
	if ((sum.r+sum.g+sum.b)/(3*weight) <   1/255.)  return vec4(1,0,0,1);
	if ((sum.r+sum.g+sum.b)/(3*weight) > 254/255.)  return vec4(0,1,0,1);
	//*/

	return sum / weight;
}
